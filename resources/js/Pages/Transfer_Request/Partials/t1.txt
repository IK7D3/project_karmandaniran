import React, { useEffect, useState } from "react";
import PrimaryButton from "@/Components/PrimaryButton";
import TextInput from "@/Components/TextInput";
import { useForm, usePage } from "@inertiajs/react";
import { Transition } from "@headlessui/react";
import ReactPaginate from "react-paginate";

const ShowForms = ({ data }) => {
    
    
    // console.log(data);
    const [currentPage, setCurrentPage] = useState(0);

    const [checkedItems, setCheckedItems] = useState(new Map());

    const { items, setItems, post, errors, processing, recentlySuccessful } =
  useForm({
  });

  const handleCheckboxChange = (itemId) => {
    const newCheckedItems = new Map(checkedItems);
    if (newCheckedItems.has(itemId)) {
      newCheckedItems.delete(itemId);
    } else {
      newCheckedItems.set(itemId, true);
    }
    setCheckedItems(newCheckedItems);
  };


    const itemsPerPage = 5;
    const pageCount = Math.ceil(
        data.filter(
            (item) =>
                item.main_destination !== null &&
                item.main_destination !== undefined
        ).length / itemsPerPage
    );

    const handlePageClick = ({ selected }) => {
        setCurrentPage(selected);
    };

    const offset = currentPage * itemsPerPage;
    const currentItems = data
        .filter(
            (item) =>
                item.main_destination !== null &&
                item.main_destination !== undefined
        )
        .slice(offset, offset + itemsPerPage);

    checkedItems.forEach((value, key) => {
        // انجام عملیات مطلوب با هر عنصر
        console.log(key, value);
    });

    const submit = (e) => {
        e.preventDefault();

        post(route("user_requests.store"));
    };
    
    return (
        <form onSubmit={submit} className="flex flex-col ">
            <p className="mb-1 bg-cyan-950 p-1 text-center text-white shadow sm:rounded-lg font- text-sm">
                !حداکثر مجاز به انتخاب پنج نفر میباشید
            </p>
            <div className="relative overflow-hidden shadow-md sm:rounded-lg">
                <table className="w-full text-sm text-right text-gray-500 ">
                    <thead className="text-base bg-amber-200">
                        <tr>
                            <th scope="col" class="px-6 py-3 ">
                                مقاصد دیگر
                            </th>
                            <th scope="col" class="px-6 py-3 ">
                                مقصد اصلی
                            </th>
                            <th scope="col" class="px-6 py-3">
                                نوع استخدام
                            </th>
                            <th scope="col" class="px-6 py-3">
                                پست سازمانی
                            </th>
                            <th scope="col" class="px-6 py-3">
                                جنسیت
                            </th>
                            <th scope="col" class="p-4">
                                <div class="flex items-center">
                                    <TextInput
                                        id="checkbox-all-search"
                                        type="checkbox"
                                        class="w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded
                                     focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800
                                      dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 
                                      dark:border-gray-600"
                                    />
                                    <label
                                        for="checkbox-all-search"
                                        class="sr-only"
                                    >
                                        checkbox
                                    </label>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        {currentItems.map((item) => (
                            <tr class="bg-white border-b ">
                                <td className="px-6">
                                    {item.other_destinations}
                                </td>
                                <td className="px-6">
                                    {item.main_destination}
                                </td>
                                <td className="px-6">
                                    {item.type_of_employment}
                                </td>
                                <td className="px-6">
                                    {item.organizational_position}
                                </td>
                                <td className="px-6">{item.gender}</td>

                                <td className="w-4 p-4">
                                    <div className="flex items-center">
                                        <TextInput
                                            id="checkbox-table-search-1"
                                            type="checkbox"
                                            className="w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 dark:focus:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                                            checked={checkedItems.has(item.id)}
                                            onChange={() =>
                                                handleCheckboxChange(item.id)
                                            }
                                        />
                                        <label
                                            for="checkbox-table-search-1"
                                            className="sr-only"
                                        >
                                            checkbox
                                        </label>
                                    </div>
                                </td>
                            </tr>
                        ))}

                        {/* <td class="px-6 py-4">Silver</td>
                        <td class="px-6 py-4">Laptop</td>
                        <td class="px-6 py-4">$2999</td> */}
                    </tbody>
                </table>
                <div
                    className="bg-cyan-950 py-2 px-5
             flex flex-row  text-sm"
                >
                    {/* ... */}

                    <ReactPaginate
                        previousLabel={"قبلی"}
                        previousClassName={
                            "text-white uppercase tracking-wider hover:text-amber-200   transition  ease-in-out duration-150"
                        }
                        nextLabel={"بعدی"}
                        nextClassName={
                            "text-white uppercase tracking-wider hover:text-amber-200   transition  ease-in-out duration-150"
                        }
                        breakLabel={"..."}
                        pageCount={pageCount}
                        marginPagesDisplayed={2}
                        pageRangeDisplayed={5}
                        onPageChange={handlePageClick}
                        pageClassName="hidden"
                        pageLinkClassName="hidden"
                        // containerClassName={"pagination"}
                        // activeClassName={"active"}
                        className=" basis-1/2  flex flex-row justify-start gap-4 font-vazir text-right
                    
                    items-center px-4 py-2border
               
                 border-transparent 
                rounded-md font-semibold  "
                    />
                    <div
                        className="basis-1/2
                items-center px-4 py-2border
               
                border-transparent 
               rounded-md font-semibold  text-white uppercase 
               tracking-wider  
                focus:outline-none focus:ring-2 focus:ring-indigo-500 
                focus:ring-offset-2 transition 
                ease-in-out duration-150"
                    >
                        صفحه {currentPage + 1} از {pageCount}
                    </div>
                </div>
            </div>
            <div className=" mt-10 text-left flex items-center gap-4">
                <PrimaryButton disabled={processing} className="w-52">
                    تایید و ارسال
                </PrimaryButton>
                <Transition
                    show={recentlySuccessful}
                    enter="transition ease-in-out"
                    enterFrom="opacity-1"
                    leave="transition ease-in-out"
                    leaveTo="opacity-0"
                >
                    <p className="text-sm text-gray-600">ذخیره شد</p>
                </Transition>
            </div>
        </form>
    );
};

export default ShowForms;
